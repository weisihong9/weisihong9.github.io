<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WeiSH&#39;s BLOG</title>
  
  <subtitle>MaTRix</subtitle>
  <link href="https://weisihong9.github.io/atom.xml" rel="self"/>
  
  <link href="https://weisihong9.github.io/"/>
  <updated>2023-07-05T15:11:48.149Z</updated>
  <id>https://weisihong9.github.io/</id>
  
  <author>
    <name>weisihong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CrossFrequencyCoupling</title>
    <link href="https://weisihong9.github.io/2023/07/05/CrossFrequencyCoupling/"/>
    <id>https://weisihong9.github.io/2023/07/05/CrossFrequencyCoupling/</id>
    <published>2023-07-05T05:00:49.000Z</published>
    <updated>2023-07-05T15:11:48.149Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目的介绍跨频耦合的背景及常用的计算方法"><a class="markdownIt-Anchor" href="#目的介绍跨频耦合的背景及常用的计算方法"></a> 目的：介绍跨频耦合的背景及常用的计算方法</h1><h2 id="1-背景"><a class="markdownIt-Anchor" href="#1-背景"></a> 1、背景</h2><ol><li>神经科学的核心问题之一是<strong>神经活动如何在不同的空间和时间尺度上协调</strong>。</li><li><strong>跨频率耦合(Cross-frequency coupling, CFC)</strong> 已被提出在时间和空间尺度上协调神经动力学。<ol><li><strong>时间尺度</strong>：神经振荡之间的相幅耦合。例如，低频振荡的相位可以影响高频振荡的振幅，从而调节神经活动的时序，实现信息处理和集成。</li><li><strong>空间尺度</strong>：神经振荡之间的空间耦合。例如，不同频率范围内的神经振荡可以在不同脑区之间相互调节，形成神经网络，实现信息的传递和整合。</li></ol></li><li><strong>EEG信号的CFC</strong>是指不同频率范围内的神经振荡之间存在相互调节和交互作用的现象。换句话说，CFC实际上是不同频带EEG的幅度/频率/相位之间的关系。<strong>常见的耦合关系如下</strong>：【慢震荡（Slow Oscillation，SO）；快震荡（ Fast Oscillation，FO ）】<ol><li><strong>相位-幅度耦合(phase-amplitude coupling，PAC)</strong>：SO的相位与FO幅度之间的耦合，也称为“嵌套”。目前研究比较多的是θ - γ和α - γ之间的PAC。</li><li><strong>相位-频率耦合(phase- frequency coupling，PFC)</strong>：SO的相位和FO的频率之间的耦合。</li><li><strong>相位-相位耦合(phase-phase coupling，PPC)</strong>：SO和FO相位之间的耦合。</li></ol></li></ol><h2 id="2-cfc在神经疾病中的应用"><a class="markdownIt-Anchor" href="#2-cfc在神经疾病中的应用"></a> 2、CFC在神经疾病中的应用</h2><p>跨频耦合作为一种神经机制，在多种神经疾病中都得到了广泛研究：</p><ol><li><strong>癫痫</strong>：研究表明[1]， 跨频频率耦合是定位癫痫组织的有用生物标志物。</li><li><strong>帕金森病</strong>：研究表明[2]，theta-gamma跨频耦合可以作为帕金森疾病的生物标志，并有助于对帕金森疾病的早期诊断和治疗进行监测。</li><li><strong>精神分裂症</strong>：研究表明[3]， theta-gamma跨频耦合减弱与认知障碍症状的严重程度有关。</li><li><strong>抑郁症</strong>：研究表明[4]，抑郁症患者与健康对照组相比，前额叶皮层的theta-gamma跨频耦合存在显著差异。</li></ol><h2 id="3-cfc常用计算方法-5"><a class="markdownIt-Anchor" href="#3-cfc常用计算方法-5"></a> 3、CFC常用计算方法 [5]</h2><ol><li><strong>锁相值（phase-locking value，PLV）</strong></li><li><strong>平均向量长度（mean vector length，MVL）</strong></li><li><strong>调制指数（modulation index，MI）</strong></li></ol><h3 id="31-锁相值phase-locking-valueplv"><a class="markdownIt-Anchor" href="#31-锁相值phase-locking-valueplv"></a> 3.1 锁相值（phase-locking value，PLV）</h3><ol><li><p><strong>定义</strong>：PLV通过比较两个信号的<strong>相位差</strong>来评估它们之间的<strong>同步性</strong>。如果两个信号存在相位-幅度耦合，那么高频时间序列的振幅将在低频振荡。</p></li><li><p><strong>计算步骤</strong>：<br /><a href="https://imgse.com/i/pCyH5fs"><img src="https://s1.ax1x.com/2023/07/05/pCyH5fs.png" alt="pCyH5fs.png" /></a></p></li><li><p><strong>计算公式</strong>：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>L</mi><mi>V</mi><mo>=</mo><mrow><mo fence="true">∣</mo><mfrac><mstyle scriptlevel="0" displaystyle="false"><msubsup><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msup><mi>e</mi><mrow><mi>i</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mrow><mi>l</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>θ</mi><mrow><mi>u</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow></msup></mstyle><mi>n</mi></mfrac><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">PLV=\left | \frac{ {\textstyle \sum_{t=1}^{n}{e^{i(\theta _{lt}-\theta _{ut})} } } }{n}\right | </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.52773em;vertical-align:-0.9500199999999999em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5777100000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中：<br />n：数据点总数<br />t：时间数据点<br />θlt：t时刻的低频相位角<br />θut：希尔伯特变换后的高频振幅时间序列在t时刻的相位角</p></li><li><p><strong>优点和缺点</strong>：<br />优点：受噪声影响小。<br />缺点：希尔伯特转换后的振幅时间序列不一定是窄带振荡。</p></li><li><p><strong>python代码实现</strong>：</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 利用<span class="variable constant_">PLV</span>计算相幅耦合</span><br><span class="line">def <span class="title function_">PLV_CFC_WSH</span>(phase, amp):</span><br><span class="line">   # phase：低频信号的相位</span><br><span class="line">   # amp：高频信号的振幅</span><br><span class="line">   amp_phi = np.<span class="title function_">angle</span>(<span class="title function_">hilbert</span>(amp))        # 高频信号振幅的相位</span><br><span class="line">   observed_plv = np.<span class="title function_">abs</span>(np.<span class="title function_">sum</span>(np.<span class="title function_">exp</span>(1j*(phase - amp_phi)))/<span class="title function_">len</span>(phase))</span><br><span class="line">   <span class="keyword">return</span> observed_plv</span><br></pre></td></tr></table></figure><h3 id="32-平均向量长度mean-vector-lengthmvl"><a class="markdownIt-Anchor" href="#32-平均向量长度mean-vector-lengthmvl"></a> 3.2 平均向量长度（mean vector length，MVL）</h3><ol><li><strong>定义</strong>：MVL是一个向量集合中各个向量长度的平均值，它提供了对向量集合整体大小或幅度的一种度量。在CFC的计算中，将对应时刻的<strong>低频信号的相位角作为向量的方向，高频信号的振幅作为向量的幅度</strong>。</li><li><strong>计算步骤</strong>：<br /><a href="https://imgse.com/i/pCyHopn"><img src="https://s1.ax1x.com/2023/07/05/pCyHopn.png" alt="pCyHopn.png" /></a></li><li><strong>计算公式</strong>：</li></ol><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mi>V</mi><mi>L</mi><mo>=</mo><mrow><mo fence="true">∣</mo><mfrac><mstyle scriptlevel="0" displaystyle="false"><msubsup><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>a</mi><mi>t</mi></msub><msup><mi>e</mi><mrow><mi>i</mi><msub><mi>θ</mi><mi>t</mi></msub></mrow></msup></mrow></mstyle><mi>n</mi></mfrac><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">MVL=\left | \frac{ {\textstyle \sum_{t=1}^{n}{a_{t} e^{i\theta _{t}} } } }{n}\right | </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.488838em;vertical-align:-0.9500199999999999em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.538818em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中:<br />n：数据点总数<br />t：时间数据点<br />at：高频振幅时间序列在t时刻的幅值<br />θt：低频相位时间序列在t时刻的相位角</p><ol start="4"><li><strong>优点和缺点</strong>：<br />优点：对于长数据段，高采样率，高信噪比的信号，建议使用MVL。<br />缺点：<ol><li>MVL的计算受到频率振幅的整体幅度影响。如果某个频率的振幅较大，那么它将在计算MVL时有更大的权重。这可能会导致对整个向量集合大小或幅度的评估存在一定的偏差。</li><li>振幅异常值可能会强烈影响平均向量长度。</li><li>不同向量之间的相位角差异可能会影响平均向量长度的计算结果。</li></ol></li><li><strong>python代码实现</strong>：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 利用<span class="variable constant_">MVL</span>计算相幅耦合</span><br><span class="line">def <span class="title function_">MVL_CFC_WSH</span>(phase, amp):</span><br><span class="line">    # phase：低频信号的相位</span><br><span class="line">    # amp：高频信号的振幅</span><br><span class="line">    amp_nor = (amp - np.<span class="title function_">min</span>(amp)) / (np.<span class="title function_">max</span>(amp) - np.<span class="title function_">min</span>(amp))  # 振幅归一化</span><br><span class="line">    observed_mvl = np.<span class="title function_">abs</span>(np.<span class="title function_">mean</span>(amp_nor * np.<span class="title function_">exp</span>(1j*phase)))</span><br><span class="line">    <span class="keyword">return</span> observed_mvl</span><br></pre></td></tr></table></figure><h3 id="33-调制指数modulation-indexmi"><a class="markdownIt-Anchor" href="#33-调制指数modulation-indexmi"></a> 3.3 调制指数（modulation index，MI）</h3><ol><li><p><strong>定义</strong>：MI通过计算幅度和相位的熵来估计幅度调制指数。</p></li><li><p><strong>计算步骤</strong>：<br /><a href="https://imgse.com/i/pCyH760"><img src="https://s1.ax1x.com/2023/07/05/pCyH760.png" alt="pCyH760.png" /></a></p></li><li><p><strong>计算公式</strong>：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mover accent="true"><mi>a</mi><mo>ˉ</mo></mover><mrow><mstyle scriptlevel="0" displaystyle="false"><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup></mstyle><msub><mover accent="true"><mi>a</mi><mo>ˉ</mo></mover><mi>k</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex"> p(j)=\frac{\bar{a} }{ {\textstyle \sum_{k=1}^{N}} \bar{a} _{k}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.415721em;vertical-align:-1.170941em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.24478em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.170941em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>ā为单个bin的平均振幅，k为bins的运行指数，N为bins的总数；p是一个有N个值的向量；H(p)为香农熵。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mstyle scriptlevel="0" displaystyle="false"><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mi>p</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mstyle></mrow><annotation encoding="application/x-tex"> H(p)=- {\textstyle \sum_{j=1}^{N}p(j)logp(j)} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.417049em;vertical-align:-0.43581800000000004em;"></span><span class="mord">−</span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mi>L</mi><mo stretchy="false">(</mo><mi>U</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> KL(U,X)=logN-H(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mi>I</mi><mo>=</mo><mfrac><mrow><mi>K</mi><mi>L</mi><mo stretchy="false">(</mo><mi>U</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex"> MI=\frac{KL(U,X)}{logN} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>U为均匀分布，X为数据分布。<br />KL(U, K): KL散度描述了用均匀分布U来估计数据的真实分布X的编码损失。</p></li><li><p><strong>优点和缺点</strong>：<br />优点：</p><ol><li>归一化熵是一种常用的信号复杂性度量，可以反映信号的不确定性和信息丰富度。</li><li>对于更短的数据，更低的采样率，更高噪声的数据，建议使用MI。</li><li><strong>MI是使用最多的CFC方法</strong>。</li></ol><p>缺点：<br />4. 依赖于特定的熵测量方法；<br />5. 对数据预处理的要求较高；</p></li><li><p><strong>python代码实现</strong>：</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 利用<span class="variable constant_">MI</span>计算相幅耦合</span><br><span class="line">def <span class="title function_">MI_CFC_WSH</span>(phase, amp, nbins):</span><br><span class="line">    # phase：低频信号的相位</span><br><span class="line">    # amp：高频信号的振幅</span><br><span class="line">    # nbins：划分的箱子数</span><br><span class="line">    bins = np.<span class="title function_">linspace</span>(-np.<span class="property">pi</span>, np.<span class="property">pi</span>, nbins+<span class="number">1</span>)   </span><br><span class="line">    # 计算每个相位区间内的振幅均值 </span><br><span class="line">    meanAmp = np.<span class="title function_">zeros</span>(nbins)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="title function_">range</span>(nbins):</span><br><span class="line">        indices = np.<span class="title function_">logical_and</span>(phase &gt;= bins[i], phase &lt; bins[i+<span class="number">1</span>])</span><br><span class="line">        meanAmp[i] = np.<span class="title function_">mean</span>(amp[indices])</span><br><span class="line">    <span class="title class_">Pj</span> = meanAmp/np.<span class="title function_">sum</span>(meanAmp)</span><br><span class="line">    H_Pj = -np.<span class="title function_">sum</span>((<span class="title class_">Pj</span>) * np.<span class="title function_">log</span>(<span class="title class_">Pj</span>))</span><br><span class="line">    <span class="variable constant_">KL</span> = np.<span class="title function_">log</span>(nbins) - H_Pj</span><br><span class="line">    observed_mi = <span class="variable constant_">KL</span> / np.<span class="title function_">log</span>(nbins)</span><br><span class="line">    <span class="keyword">return</span> [observed_mi, meanAmp]</span><br></pre></td></tr></table></figure><h2 id="4-置换检验"><a class="markdownIt-Anchor" href="#4-置换检验"></a> 4、置换检验</h2><ol><li><p><strong>定义</strong>：置换检验是一种统计方法，通过对数据进行随机重新排序或重组，产生一组随机分布，从而提供了对观察到的效应进行比较的基准。<strong>在计算CFC时，进行置换检验是为了评估观察到的耦合效应是否显著，即是否超出了随机预期。</strong></p></li><li><p><strong>计算步骤</strong>：</p><ol><li>随机在幅值时间序列某数据点上将数据分为两部分，并将<strong>两部分时间序列的顺序颠倒</strong>，构造出<strong>置换幅值时间序列</strong>。</li><li>通过计算<strong>原始相位时间序列</strong>和<strong>置换幅值时间序列</strong>(反之亦然)之间的耦合值来构造洗牌耦合值。</li><li>这种生成替代数据的方法是最保守的，因为除了所研究的相位角和幅值之间的时间关系，它保留了脑电图数据的所有特征，</li><li>洗牌通常重复200-1000次。</li><li>将观察到的耦合值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>F</mi><msub><mi>C</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi><mi>e</mi><mi>r</mi><mi>v</mi><mi>e</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">CFC_{observed}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><strong>标准化</strong>为洗牌耦合值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>F</mi><msub><mi>C</mi><mrow><mi>s</mi><mi>h</mi><mi>u</mi><mi>f</mi><mi>f</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">CFC_{shuffled}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的分布，公式如下：</li></ol><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p></li><li><p><strong>python代码实现</strong></p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">npnts = <span class="title function_">len</span>(eeg)</span><br><span class="line">n_iter = <span class="number">1000</span></span><br><span class="line">PLV_shuffled = np.<span class="title function_">zeros</span>(n_iter)</span><br><span class="line">MVL_shuffled = np.<span class="title function_">zeros</span>(n_iter)</span><br><span class="line">MI_shuffled = np.<span class="title function_">zeros</span>(n_iter)</span><br><span class="line"><span class="keyword">for</span> ni <span class="keyword">in</span> <span class="title function_">range</span>(n_iter):</span><br><span class="line">    cutpoint = random.<span class="title function_">randrange</span>(np.<span class="title function_">round</span>(npnts/<span class="number">10</span>), np.<span class="title function_">round</span>(npnts*<span class="number">.9</span>))</span><br><span class="line">    new_amp = np.<span class="title function_">concatenate</span>((amp[<span class="attr">cutpoint</span>:] , amp[:cutpoint]))</span><br><span class="line"></span><br><span class="line">    PLV_shuffled[ni] = <span class="title function_">PLV_CFC_WSH</span>(phase, new_amp)</span><br><span class="line">    MVL_shuffled[ni] = <span class="title function_">MVL_CFC_WSH</span>(phase, new_amp)</span><br><span class="line">    [<span class="variable constant_">MI</span>, meanAmp] = <span class="title function_">MI_CFC_WSH</span>(phase, new_amp, n_hist_bins)</span><br><span class="line">    MI_shuffled[ni] = <span class="variable constant_">MI</span></span><br><span class="line">    </span><br><span class="line">PLV_CFCz = (PLV_observed - np.<span class="title function_">mean</span>(PLV_shuffled))/np.<span class="title function_">std</span>(PLV_shuffled)</span><br><span class="line">MVL_CFCz = (MVL_observed- np.<span class="title function_">mean</span>(MVL_shuffled))/np.<span class="title function_">std</span>(MVL_shuffled)</span><br><span class="line">MI_CFCz = (MI_observed - np.<span class="title function_">mean</span>(MI_shuffled))/np.<span class="title function_">std</span>(MI_shuffled)</span><br><span class="line"></span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;PLV_CFCz: &#x27;</span>,PLV_CFCz)</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;MVL_CFCz: &#x27;</span>,MVL_CFCz)</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;MI_CFCz: &#x27;</span>,MI_CFCz)</span><br></pre></td></tr></table></figure><h2 id="5-实例分析"><a class="markdownIt-Anchor" href="#5-实例分析"></a> 5、实例分析</h2><h3 id="51-模拟信号的cfc"><a class="markdownIt-Anchor" href="#51-模拟信号的cfc"></a> 5.1 模拟信号的CFC</h3><ol><li><strong>构建耦合信号</strong></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">fs = <span class="number">1000</span>                            # sampling frequency (samples per second/<span class="title class_">Hz</span>) </span><br><span class="line">dt = <span class="number">1</span>/fs                           # seconds per sample </span><br><span class="line">stopTime = <span class="number">5</span>                        # length <span class="keyword">of</span> signal <span class="keyword">in</span> seconds </span><br><span class="line">t = np.<span class="title function_">arange</span>(<span class="number">0</span>, stopTime-dt, dt).<span class="property">T</span> # time vector <span class="keyword">in</span> seconds </span><br><span class="line">stopTime_plot = <span class="number">2</span>                   #limit time axis <span class="keyword">for</span> improved visualization </span><br><span class="line"></span><br><span class="line"># 生成调制后的信号</span><br><span class="line">f_P = <span class="number">4</span>       # 低频相位</span><br><span class="line">f_A = <span class="number">32</span>      # 高频幅度</span><br><span class="line">f_AM = <span class="number">0.5</span>    # f_AM表示振幅调制的频率</span><br><span class="line"><span class="title class_">Afp</span> = <span class="number">1</span>       # <span class="title class_">AfP</span>是固定的标量，决定<span class="variable constant_">SO</span>（慢波）的峰值振幅、</span><br><span class="line">K = <span class="number">2</span>         # K是固定的标量，决定<span class="variable constant_">FO</span>（快波）的峰值振幅、</span><br><span class="line">beta = <span class="number">0.3</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Xf</span>_P = <span class="title class_">Afp</span> * np.<span class="title function_">sin</span>(<span class="number">2</span> * np.<span class="property">pi</span> * f_P * t)       # 慢波（低频相位）</span><br><span class="line"><span class="title class_">Afa</span> = K * beta * np.<span class="title function_">sin</span>(<span class="number">2</span> * np.<span class="property">pi</span> * f_AM * t)  </span><br><span class="line"><span class="title class_">Xf</span>_A = <span class="title class_">Afa</span> * np.<span class="title function_">sin</span>(<span class="number">2</span> * np.<span class="property">pi</span> * f_A * t)       # 快波（高频振幅）</span><br><span class="line"></span><br><span class="line">signal = <span class="title class_">Xf</span>_A + <span class="title class_">Xf</span>_P</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>计算CFC</strong></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">phasefilt = <span class="title function_">filterFGx</span>(signal, fs, f_P, <span class="number">0.5</span>)</span><br><span class="line">phase = np.<span class="title function_">angle</span>(<span class="title function_">hilbert</span>(phasefilt))</span><br><span class="line"></span><br><span class="line">ampfilt = <span class="title function_">filterFGx</span>(signal, fs, f_A, <span class="number">20</span>)</span><br><span class="line">amp = np.<span class="title function_">abs</span>(<span class="title function_">hilbert</span>(ampfilt))**<span class="number">2</span></span><br><span class="line"></span><br><span class="line"># 计算观测<span class="variable constant_">CFC</span></span><br><span class="line">PLV_observed = <span class="title function_">PLV_CFC_WSH</span>(phase, amp)</span><br><span class="line">MVL_observed = <span class="title function_">MVL_CFC_WSH</span>(phase, amp)</span><br><span class="line">n_hist_bins = <span class="number">18</span></span><br><span class="line">[MI_observed, meanAmp] = <span class="title function_">MI_CFC_WSH</span>(phase, amp, n_hist_bins)</span><br><span class="line"></span><br><span class="line"># 置换检验，计算洗牌<span class="variable constant_">CFC</span></span><br><span class="line">npnts = <span class="title function_">len</span>(signal)</span><br><span class="line">n_iter = <span class="number">1000</span></span><br><span class="line">PLV_shuffled = np.<span class="title function_">zeros</span>(n_iter)</span><br><span class="line">MVL_shuffled = np.<span class="title function_">zeros</span>(n_iter)</span><br><span class="line">MI_shuffled = np.<span class="title function_">zeros</span>(n_iter)</span><br><span class="line"><span class="keyword">for</span> ni <span class="keyword">in</span> <span class="title function_">range</span>(n_iter):</span><br><span class="line">    cutpoint = random.<span class="title function_">randrange</span>(np.<span class="title function_">round</span>(npnts/<span class="number">10</span>), np.<span class="title function_">round</span>(npnts*<span class="number">.9</span>))</span><br><span class="line">    new_amp = np.<span class="title function_">concatenate</span>((amp[<span class="attr">cutpoint</span>:] , amp[:cutpoint]))</span><br><span class="line"></span><br><span class="line">    PLV_shuffled[ni] = <span class="title function_">PLV_CFC_WSH</span>(phase, new_amp)</span><br><span class="line">    MVL_shuffled[ni] = <span class="title function_">MVL_CFC_WSH</span>(phase, new_amp)</span><br><span class="line">    [<span class="variable constant_">MI</span>, meanAmp] = <span class="title function_">MI_CFC_WSH</span>(phase, new_amp, n_hist_bins)</span><br><span class="line">    MI_shuffled[ni] = <span class="variable constant_">MI</span></span><br><span class="line">    </span><br><span class="line">PLV_CFCz = (PLV_observed - np.<span class="title function_">mean</span>(PLV_shuffled))/np.<span class="title function_">std</span>(PLV_shuffled)</span><br><span class="line">MVL_CFCz = (MVL_observed- np.<span class="title function_">mean</span>(MVL_shuffled))/np.<span class="title function_">std</span>(MVL_shuffled)</span><br><span class="line">MI_CFCz = (MI_observed - np.<span class="title function_">mean</span>(MI_shuffled))/np.<span class="title function_">std</span>(MI_shuffled)</span><br><span class="line"></span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;PLV_CFCz: &#x27;</span>,PLV_CFCz)</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;MVL_CFCz: &#x27;</span>,MVL_CFCz)</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;MI_CFCz: &#x27;</span>,MI_CFCz)</span><br></pre></td></tr></table></figure><h3 id="52-eeg信号的cfc"><a class="markdownIt-Anchor" href="#52-eeg信号的cfc"></a> 5.2 EEG信号的CFC</h3><ol><li><strong>加载EEG信号</strong></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data = scipy.<span class="property">io</span>.<span class="title function_">loadmat</span>(<span class="string">&#x27;accumbens_eeg.mat&#x27;</span>)</span><br><span class="line">srate = <span class="number">1000</span></span><br><span class="line">npnts = <span class="title function_">len</span>(data)</span><br><span class="line">eeg = data[<span class="string">&#x27;eeg&#x27;</span>].<span class="title function_">reshape</span>(-<span class="number">1</span>)</span><br><span class="line">fig = plt.<span class="title function_">figure</span>(figsize=(<span class="number">10</span>, <span class="number">4</span>),dpi=<span class="number">600</span>)</span><br><span class="line">ax1 = fig.<span class="title function_">add_subplot</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)  # 子图<span class="number">1</span></span><br><span class="line">ax1.<span class="title function_">plot</span>(eeg, label=<span class="string">&#x27;eeg_data&#x27;</span>)</span><br><span class="line">ax1.<span class="title function_">legend</span>()</span><br><span class="line">plt.<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pCybk7D"><img src="https://s1.ax1x.com/2023/07/05/pCybk7D.png" alt="pCybk7D.png" /></a></p><ol start="2"><li><strong>计算CFC</strong></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># define frequencies <span class="keyword">for</span> phase and <span class="keyword">for</span> amplitude</span><br><span class="line">phas_freqs =  np.<span class="title function_">arange</span>(<span class="number">5</span>, <span class="number">20</span>, <span class="number">2</span>)</span><br><span class="line">ampl_freqs = np.<span class="title function_">arange</span>(<span class="number">30</span>, <span class="number">150</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"># number <span class="keyword">of</span> iterations used <span class="keyword">for</span> permutation testing</span><br><span class="line">n_iter = <span class="number">500</span></span><br><span class="line"></span><br><span class="line"># initialize output phase-amplitude matrix</span><br><span class="line">phaseamp = np.<span class="title function_">zeros</span>([<span class="title function_">len</span>(phas_freqs),<span class="title function_">len</span>(ampl_freqs)])</span><br><span class="line"></span><br><span class="line"># loop over frequencies <span class="keyword">for</span> phase</span><br><span class="line"><span class="keyword">for</span> lower_fi <span class="keyword">in</span> <span class="title function_">range</span>(<span class="title function_">len</span>(phas_freqs)):</span><br><span class="line">    </span><br><span class="line">    # get phase values</span><br><span class="line">    phasefilt = <span class="title function_">filterFGx</span>(eeg, srate, phas_freqs[lower_fi], phas_freqs[lower_fi]*<span class="number">.4</span>)</span><br><span class="line">    phase = np.<span class="title function_">angle</span>(<span class="title function_">hilbert</span>(phasefilt))</span><br><span class="line">    # phase = <span class="title function_">angle</span>(<span class="title function_">hilbert</span>(phasefilt))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> upper_fi <span class="keyword">in</span> <span class="title function_">range</span>(<span class="title function_">len</span>(ampl_freqs)):</span><br><span class="line">        </span><br><span class="line">        # get power values (<span class="attr">note</span>: <span class="string">&#x27;power&#x27;</span> is a built-<span class="keyword">in</span> <span class="keyword">function</span> so we<span class="string">&#x27;ll name this variable &#x27;</span>amp<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">        ampfilt = filterFGx(eeg, srate, ampl_freqs[upper_fi], ampl_freqs[upper_fi]*.78)</span></span><br><span class="line"><span class="string">        amplit = np.abs(hilbert(ampfilt))**2</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        # calculate observed modulation index(MVL)</span></span><br><span class="line"><span class="string">        [modidx, _] = MI_CFC_WSH(phase, amplit, 30)</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        # now use permutation testing to get Z-value</span></span><br><span class="line"><span class="string">        bm = np.zeros(n_iter)</span></span><br><span class="line"><span class="string">        for bi in range (n_iter):</span></span><br><span class="line"><span class="string">            cutpoint = random.randrange(np.round(npnts/10), np.round(npnts*.9))</span></span><br><span class="line"><span class="string">            new_amp = np.concatenate((amplit[cutpoint:] , amplit[:cutpoint]))</span></span><br><span class="line"><span class="string">            [mi, _] = MI_CFC_WSH(phase, new_amp, 30)</span></span><br><span class="line"><span class="string">            bm[bi] = mi</span></span><br><span class="line"><span class="string">        # the value we use is the normalized distance away from the mean of</span></span><br><span class="line"><span class="string">        # boot-strapped values</span></span><br><span class="line"><span class="string">        phaseamp[lower_fi, upper_fi] = (modidx - np.mean(bm)) / np.std(bm)</span></span><br></pre></td></tr></table></figure><ol start="3"><li><strong>可视化</strong></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fig, ax = plt.<span class="title function_">subplots</span>()</span><br><span class="line"><span class="variable constant_">CFC_WSH</span> = ax.<span class="title function_">contourf</span>(phas_freqs, ampl_freqs, phaseamp.<span class="property">T</span>)</span><br><span class="line">cbar = fig.<span class="title function_">colorbar</span>(<span class="variable constant_">CFC_WSH</span>)</span><br><span class="line">plt.<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pCybinK"><img src="https://s1.ax1x.com/2023/07/05/pCybinK.jpg" alt="pCybinK.jpg" /></a></p><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h2><p>[1] Li, C., et al., 2021. High-frequency hubs of the ictal cross-frequency coupling network predict surgical outcome in epilepsy patients. IEEE Transactions on Neural Systems and Rehabilitation Engineering, 29, pp.1290-1299. (2区)<br />[2] Salimpour, Y. and Anderson, W.S., 2019. Cross-frequency coupling based neuromodulation for treating neurological disorders. Frontiers in neuroscience, 13, p.125. (3区)<br />[3] Musaeus, C.S., et al., 2020. Electroencephalographic cross-frequency coupling as a sign of disease progression in patients with mild cognitive impairment: a pilot study. Frontiers in neuroscience, 14, p.790. (3区)<br />[4] Zhang, W., et al., 2023. Altered fronto-central theta-gamma coupling in major depressive disorder during auditory steady-state responses. Clinical Neurophysiology, 146, pp.65-76. (3区)<br />[5] Hülsemann, Mareike J., Ewald Naumann and Björn Rasch. 《Quantification of Phase-Amplitude Coupling in Neuronal Oscillations: Comparison of Phase-Locking Value, Mean Vector Length, Modulation Index, and Generalized-Linear-Modeling-Cross-Frequency-Coupling》. Frontiers in Neuroscience (2019). (3区)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目的介绍跨频耦合的背景及常用的计算方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#目的介绍跨频耦合的背景及常用的计算方法&quot;&gt;&lt;/a&gt; 目的：介绍跨频耦合的背景及常用的计算方法&lt;/h1&gt;
&lt;h2 id=&quot;1-背景&quot;&gt;&lt;a class=</summary>
      
    
    
    
    <category term="EEG" scheme="https://weisihong9.github.io/categories/EEG/"/>
    
    
    <category term="CFC,PLV,MVL,MI" scheme="https://weisihong9.github.io/tags/CFC-PLV-MVL-MI/"/>
    
  </entry>
  
  <entry>
    <title>EEG_TopoMap</title>
    <link href="https://weisihong9.github.io/2023/07/03/EEG_TopoMap/"/>
    <id>https://weisihong9.github.io/2023/07/03/EEG_TopoMap/</id>
    <published>2023-07-02T16:00:00.000Z</published>
    <updated>2023-07-05T05:08:47.908Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目的利用mne实现自定义矩阵大脑拓扑图的绘制"><a class="markdownIt-Anchor" href="#目的利用mne实现自定义矩阵大脑拓扑图的绘制"></a> 目的：利用MNE实现自定义矩阵大脑拓扑图的绘制</h1><h2 id="0-加载python库"><a class="markdownIt-Anchor" href="#0-加载python库"></a> 0、加载python库</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.<span class="property">pyplot</span> <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> mne</span><br><span class="line"></span><br><span class="line">%matplotlib qt</span><br></pre></td></tr></table></figure><h2 id="1-获取可用的电极布局系统"><a class="markdownIt-Anchor" href="#1-获取可用的电极布局系统"></a> 1、获取可用的电极布局系统</h2><p>在使用MNE进行EEG信号的可视化操作时，往往需要导入对应电极的位置信息，MNE中有内置的常见电极布局系统，通过调用下面指令进行导入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mne.<span class="property">channels</span>.<span class="title function_">get_builtin_montages</span>()</span><br><span class="line"></span><br><span class="line"># <span class="attr">output</span>:</span><br><span class="line">[<span class="string">&#x27;standard_1005&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;standard_1020&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;standard_alphabetic&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;standard_postfixed&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;standard_prefixed&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;standard_primed&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;biosemi16&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;biosemi32&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;biosemi64&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;biosemi128&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;biosemi160&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;biosemi256&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;easycap-M1&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;easycap-M10&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;EGI_256&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;GSN-HydroCel-32&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;GSN-HydroCel-64_1.0&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;GSN-HydroCel-65_1.0&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;GSN-HydroCel-128&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;GSN-HydroCel-129&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;GSN-HydroCel-256&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;GSN-HydroCel-257&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;mgh60&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;mgh70&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;artinis-octamon&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;artinis-brite23&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;brainproducts-RNP-BA-128&#x27;</span>]</span><br></pre></td></tr></table></figure><p>从上面的输出可以看出，MNE中共有27个可用的电极布局系统，具体选择哪一个要看你采集数据时使用的脑电帽电极布局系统是哪个。</p><h2 id="2-利用mne自带的电极布局系统对矩阵进行通道定位"><a class="markdownIt-Anchor" href="#2-利用mne自带的电极布局系统对矩阵进行通道定位"></a> 2、利用MNE自带的电极布局系统对矩阵进行通道定位</h2><h3 id="21-加载脑地形图位置坐标并可视化"><a class="markdownIt-Anchor" href="#21-加载脑地形图位置坐标并可视化"></a> 2.1 加载脑地形图位置坐标并可视化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int32_montage = mne.<span class="property">channels</span>.<span class="title function_">make_standard_montage</span>(<span class="string">&#x27;biosemi32&#x27;</span>)</span><br><span class="line">int32_montage.<span class="title function_">plot</span>()</span><br><span class="line">plt.<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pCrODBT"><img src="https://s1.ax1x.com/2023/07/03/pCrODBT.png" alt="pCrODBT.png" /></a></p><h3 id="22-构建自定义32导联的字典导联名称与导联权重一一对应"><a class="markdownIt-Anchor" href="#22-构建自定义32导联的字典导联名称与导联权重一一对应"></a> 2.2 构建自定义32导联的字典，导联名称与导联权重一一对应</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weight = &#123;<span class="string">&#x27;Fp1&#x27;</span>: <span class="number">0.31</span>, <span class="string">&#x27;AF3&#x27;</span>: -<span class="number">0.26</span>, <span class="string">&#x27;F7&#x27;</span>: <span class="number">1.22</span>, <span class="string">&#x27;F3&#x27;</span>: <span class="number">0.99</span>, <span class="string">&#x27;Fz&#x27;</span>: <span class="number">0.71</span>, <span class="string">&#x27;FC5&#x27;</span>: <span class="number">0.55</span>, <span class="string">&#x27;FC1&#x27;</span>: -<span class="number">1.19</span>, <span class="string">&#x27;T7&#x27;</span>: <span class="number">0.61</span>, <span class="string">&#x27;C3&#x27;</span>: -<span class="number">0.80</span>, <span class="string">&#x27;Cz&#x27;</span>: <span class="number">2.36</span>, <span class="string">&#x27;CP5&#x27;</span>: -<span class="number">0.74</span>, <span class="string">&#x27;CP1&#x27;</span>: <span class="number">0.72</span>, <span class="string">&#x27;P7&#x27;</span>: <span class="number">0.93</span>, <span class="string">&#x27;P3&#x27;</span>: <span class="number">0.38</span>, <span class="string">&#x27;Pz&#x27;</span>: <span class="number">1.07</span>, <span class="string">&#x27;PO3&#x27;</span>: -<span class="number">1.46</span>, <span class="string">&#x27;O1&#x27;</span>: -<span class="number">0.12</span>, <span class="string">&#x27;Oz&#x27;</span>: <span class="number">1.074</span>, <span class="string">&#x27;Fp2&#x27;</span>: <span class="number">1.04</span>, <span class="string">&#x27;AF4&#x27;</span>: -<span class="number">0.065</span>, <span class="string">&#x27;F4&#x27;</span>: -<span class="number">0.52</span>, <span class="string">&#x27;F8&#x27;</span>: <span class="number">0.37</span>, <span class="string">&#x27;FC2&#x27;</span>: <span class="number">1.30</span>, <span class="string">&#x27;FC6&#x27;</span>: <span class="number">0.94</span>, <span class="string">&#x27;C4&#x27;</span>: -<span class="number">1.11</span>, <span class="string">&#x27;T8&#x27;</span>: -<span class="number">0.16</span>, <span class="string">&#x27;CP2&#x27;</span>: <span class="number">1.82</span>, <span class="string">&#x27;CP6&#x27;</span>: <span class="number">0.41</span>, <span class="string">&#x27;P4&#x27;</span>: <span class="number">0.46</span>, <span class="string">&#x27;P8&#x27;</span>: <span class="number">0.99</span>, <span class="string">&#x27;PO4&#x27;</span>:<span class="number">0.15</span>, <span class="string">&#x27;O2&#x27;</span>:<span class="number">0.23</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="23-根据脑地形图导联顺序重构自定义矩阵注意"><a class="markdownIt-Anchor" href="#23-根据脑地形图导联顺序重构自定义矩阵注意"></a> 2.3 根据脑地形图导联顺序重构自定义矩阵（*注意）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 查看脑地形图矩阵导联位置</span><br><span class="line">sensor_data_32 = int32_montage.<span class="title function_">get_positions</span>()[<span class="string">&#x27;ch_pos&#x27;</span>]</span><br><span class="line">sensor_dataframe_32 = pd.<span class="title class_">DataFrame</span>(sensor_data_32).<span class="property">T</span></span><br><span class="line">chLa_index = sensor_dataframe_32.<span class="property">index</span>.<span class="property">values</span></span><br><span class="line"><span class="title function_">print</span>(chLa_index)</span><br><span class="line"></span><br><span class="line"># 重构自定义矩阵顺序</span><br><span class="line">reWeight = []</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> <span class="attr">chLa_index</span>:</span><br><span class="line">    val = weight[key]</span><br><span class="line">    reWeight.<span class="title function_">append</span>(val)</span><br></pre></td></tr></table></figure><h3 id="24-topomap可视化"><a class="markdownIt-Anchor" href="#24-topomap可视化"></a> 2.4 TopoMap可视化</h3><h4 id="241-创建info"><a class="markdownIt-Anchor" href="#241-创建info"></a> 2.4.1 创建info</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">info = mne.<span class="title function_">create_info</span>(</span><br><span class="line">        ch_names = chLa_index,</span><br><span class="line">        ch_types = [<span class="string">&#x27;eeg&#x27;</span>]*<span class="number">32</span>,   # 通道个数</span><br><span class="line">        sfreq = <span class="number">1000</span>)            # 采样频率</span><br><span class="line">info.<span class="title function_">set_montage</span>(int32_montage)</span><br></pre></td></tr></table></figure><h4 id="242-可视化"><a class="markdownIt-Anchor" href="#242-可视化"></a> 2.4.2 可视化</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">im, cn = mne.<span class="property">viz</span>.<span class="title function_">plot_topomap</span>(reWeight, </span><br><span class="line">                              info, </span><br><span class="line">                              names = chLa_index.<span class="title function_">tolist</span>(),</span><br><span class="line">                              # vlim=(-<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">                             )</span><br><span class="line">plt.<span class="title function_">colorbar</span>(im)</span><br><span class="line">plt.<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pCrO2C9"><img src="https://s1.ax1x.com/2023/07/03/pCrO2C9.png" alt="pCrO2C9.png" /></a></p><h2 id="3-自定义电极布局文件对矩阵进行通道定位"><a class="markdownIt-Anchor" href="#3-自定义电极布局文件对矩阵进行通道定位"></a> 3、自定义电极布局文件对矩阵进行通道定位</h2><p>假设我有一个64导联的帽子，根据实验需求，实验过程中我只选择中央区和顶叶区域的电极。<br />那么我们该如何根据自己选择的导联制定通道定位模版呢？<br />这里有两种方法：</p><p>第一种：自定义新的电极布局文件，文件只包含实验选择的导联。这个方法的目的是教会你如何制作自己的电极布局文件，实际绘制时建议选择第二种方法。</p><p>第二种：使用原来的电极布局文件，先对矩阵进行归一化，后将未被选择的导联值置为0</p><h2 id="4-第一种方法"><a class="markdownIt-Anchor" href="#4-第一种方法"></a> 4、第一种方法</h2><h3 id="41-下载标准的64通道电极布局系统坐标"><a class="markdownIt-Anchor" href="#41-下载标准的64通道电极布局系统坐标"></a> 4.1 下载标准的64通道电极布局系统坐标</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 读取<span class="variable constant_">MNE</span>中biosemi64电极位置信息</span><br><span class="line">biosemi_montage = mne.<span class="property">channels</span>.<span class="title function_">make_standard_montage</span>(<span class="string">&#x27;biosemi64&#x27;</span>)</span><br><span class="line">sensor_data_64 = biosemi_montage.<span class="title function_">get_positions</span>()[<span class="string">&#x27;ch_pos&#x27;</span>]</span><br><span class="line">sensor_dataframe_64 = pd.<span class="title class_">DataFrame</span>(sensor_data_64).<span class="property">T</span></span><br><span class="line">sensor_dataframe_64.<span class="title function_">to_excel</span>(<span class="string">&#x27;sensor_dataframe_64.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="42-根据下载文件选择实验选取的电极坐标保存为excel格式"><a class="markdownIt-Anchor" href="#42-根据下载文件选择实验选取的电极坐标保存为excel格式"></a> 4.2 根据下载文件，选择实验选取的电极坐标，保存为excel格式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 模仿下载的电极布局excel，自定义电极布局文件</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pCyAlad"><img src="https://s1.ax1x.com/2023/07/05/pCyAlad.png" alt="pCyAlad.png" /></a></p><h3 id="43-加载自定义的excel文件制作自己的montage"><a class="markdownIt-Anchor" href="#43-加载自定义的excel文件制作自己的montage"></a> 4.3 加载自定义的excel文件，制作自己的montage</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">myStardart = pd.<span class="title function_">read_excel</span>(<span class="string">&#x27;mySensor_dataframe.xlsx&#x27;</span>, index_col=<span class="number">0</span>) # 读取自己的电极定位文件</span><br><span class="line">ch_names = np.<span class="title function_">array</span>(myStardart.<span class="property">index</span>)                              # 电极名称</span><br><span class="line">position = np.<span class="title function_">array</span>(myStardart)                                    # 电极坐标位置</span><br><span class="line">sensorPosition = <span class="title function_">dict</span>(<span class="title function_">zip</span>(ch_names, position))                     # 制定为字典的形式</span><br><span class="line">myMontage = mne.<span class="property">channels</span>.<span class="title function_">make_dig_montage</span>(ch_pos=sensorPosition)</span><br><span class="line">myMontage.<span class="title function_">plot</span>()</span><br><span class="line">plt.<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pCrOBuV"><img src="https://s1.ax1x.com/2023/07/03/pCrOBuV.png" alt="pCrOBuV.png" /></a></p><h3 id="44-自定义导联权重字典"><a class="markdownIt-Anchor" href="#44-自定义导联权重字典"></a> 4.4 自定义导联权重字典</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">myWeight = &#123;<span class="string">&#x27;C1&#x27;</span>: <span class="number">0.31</span>, <span class="string">&#x27;C3&#x27;</span>: <span class="number">1.22</span>, <span class="string">&#x27;P6&#x27;</span>: <span class="number">0.71</span>, <span class="string">&#x27;P4&#x27;</span>: <span class="number">0.55</span>,<span class="string">&#x27;P2&#x27;</span>: -<span class="number">1.19</span>, <span class="string">&#x27;CP5&#x27;</span>: <span class="number">0.61</span>,</span><br><span class="line">            <span class="string">&#x27;CP3&#x27;</span>: -<span class="number">0.80</span>, <span class="string">&#x27;CP1&#x27;</span>: <span class="number">2.36</span>, <span class="string">&#x27;P1&#x27;</span>: -<span class="number">0.74</span>, <span class="string">&#x27;P3&#x27;</span>: <span class="number">0.72</span>,<span class="string">&#x27;P5&#x27;</span>: <span class="number">0.93</span>, <span class="string">&#x27;Pz&#x27;</span>: -<span class="number">1.46</span>, </span><br><span class="line">            <span class="string">&#x27;CPz&#x27;</span>: -<span class="number">0.12</span>, <span class="string">&#x27;Cz&#x27;</span>: <span class="number">1.074</span>,<span class="string">&#x27;C5&#x27;</span>:<span class="number">2.34</span>,<span class="string">&#x27;C2&#x27;</span>: <span class="number">1.04</span>, <span class="string">&#x27;C4&#x27;</span>: -<span class="number">0.065</span>, <span class="string">&#x27;C6&#x27;</span>: -<span class="number">0.52</span>, </span><br><span class="line">            <span class="string">&#x27;CP2&#x27;</span>: <span class="number">0.37</span>, <span class="string">&#x27;CP4&#x27;</span>: <span class="number">1.30</span>, <span class="string">&#x27;CP6&#x27;</span>: <span class="number">0.94</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="45-根据脑地形图导联顺序重构自定义矩阵注意"><a class="markdownIt-Anchor" href="#45-根据脑地形图导联顺序重构自定义矩阵注意"></a> 4.5 根据脑地形图导联顺序重构自定义矩阵（*注意）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查看脑地形图矩阵导联位置</span><br><span class="line">my_chLa_index = ch_names.<span class="title function_">tolist</span>()</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;脑地形图矩阵导联顺序:&#x27;</span>,my_chLa_index)</span><br><span class="line"></span><br><span class="line"># 重构自定义矩阵顺序</span><br><span class="line">reMyWeight = []</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> <span class="attr">my_chLa_index</span>:</span><br><span class="line">    val = myWeight[key]</span><br><span class="line">    reMyWeight.<span class="title function_">append</span>(val)</span><br></pre></td></tr></table></figure><h3 id="46-topomap可视化"><a class="markdownIt-Anchor" href="#46-topomap可视化"></a> 4.6 TopoMap可视化</h3><h4 id="461-创建info"><a class="markdownIt-Anchor" href="#461-创建info"></a> 4.6.1 创建info</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">myinfo = mne.<span class="title function_">create_info</span>(</span><br><span class="line">        ch_names = my_chLa_index,</span><br><span class="line">        ch_types = [<span class="string">&#x27;eeg&#x27;</span>]*<span class="number">21</span>,   # 通道个数</span><br><span class="line">        sfreq = <span class="number">1000</span>)            # 采样频率</span><br><span class="line">myinfo.<span class="title function_">set_montage</span>(myMontage)</span><br></pre></td></tr></table></figure><h4 id="462-可视化"><a class="markdownIt-Anchor" href="#462-可视化"></a> 4.6.2 可视化</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">im, cn = mne.<span class="property">viz</span>.<span class="title function_">plot_topomap</span>(reMyWeight, </span><br><span class="line">                              myinfo, </span><br><span class="line">                              names = my_chLa_index,</span><br><span class="line">                              # vlim=(-<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">                             )</span><br><span class="line">plt.<span class="title function_">colorbar</span>(im)</span><br><span class="line">plt.<span class="title function_">title</span>(<span class="string">&#x27;My Montage&#x27;</span>)</span><br><span class="line">plt.<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pCrOc4J"><img src="https://s1.ax1x.com/2023/07/03/pCrOc4J.png" alt="pCrOc4J.png" /></a></p><h2 id="5-第二种方法"><a class="markdownIt-Anchor" href="#5-第二种方法"></a> 5、第二种方法</h2><h3 id="51-读取标准的64通道电极布局系统坐标"><a class="markdownIt-Anchor" href="#51-读取标准的64通道电极布局系统坐标"></a> 5.1 读取标准的64通道电极布局系统坐标</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 读取<span class="variable constant_">MNE</span>中biosemi64电极位置信息</span><br><span class="line">biosemi_montage = mne.<span class="property">channels</span>.<span class="title function_">make_standard_montage</span>(<span class="string">&#x27;biosemi64&#x27;</span>)</span><br><span class="line">sensor_data_64 = biosemi_montage.<span class="title function_">get_positions</span>()[<span class="string">&#x27;ch_pos&#x27;</span>]</span><br><span class="line">sensor_dataframe_64 = pd.<span class="title class_">DataFrame</span>(sensor_data_64).<span class="property">T</span></span><br><span class="line">chLa_index_64 = sensor_dataframe_64.<span class="property">index</span>.<span class="property">values</span></span><br><span class="line">biosemi_montage.<span class="title function_">plot</span>()</span><br><span class="line">plt.<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pCyubh4"><img src="https://s1.ax1x.com/2023/07/05/pCyubh4.png" alt="pCyubh4.png" /></a></p><h3 id="52-构建自定义部分导联字典"><a class="markdownIt-Anchor" href="#52-构建自定义部分导联字典"></a> 5.2 构建自定义部分导联字典</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">myWeight = &#123;<span class="string">&#x27;C1&#x27;</span>: <span class="number">0.31</span>, <span class="string">&#x27;C3&#x27;</span>: <span class="number">1.22</span>, <span class="string">&#x27;P6&#x27;</span>: <span class="number">0.71</span>, <span class="string">&#x27;P4&#x27;</span>: <span class="number">0.55</span>,<span class="string">&#x27;P2&#x27;</span>: -<span class="number">1.19</span>, <span class="string">&#x27;CP5&#x27;</span>: <span class="number">0.61</span>,</span><br><span class="line">            <span class="string">&#x27;CP3&#x27;</span>: -<span class="number">0.80</span>, <span class="string">&#x27;CP1&#x27;</span>: <span class="number">2.36</span>, <span class="string">&#x27;P1&#x27;</span>: -<span class="number">0.74</span>, <span class="string">&#x27;P3&#x27;</span>: <span class="number">0.72</span>,<span class="string">&#x27;P5&#x27;</span>: <span class="number">0.93</span>, <span class="string">&#x27;Pz&#x27;</span>: -<span class="number">1.46</span>, </span><br><span class="line">            <span class="string">&#x27;CPz&#x27;</span>: -<span class="number">0.12</span>, <span class="string">&#x27;Cz&#x27;</span>: <span class="number">1.074</span>,<span class="string">&#x27;C5&#x27;</span>:<span class="number">2.34</span>,<span class="string">&#x27;C2&#x27;</span>: <span class="number">1.04</span>, <span class="string">&#x27;C4&#x27;</span>: -<span class="number">0.065</span>, <span class="string">&#x27;C6&#x27;</span>: -<span class="number">0.52</span>, </span><br><span class="line">            <span class="string">&#x27;CP2&#x27;</span>: <span class="number">0.37</span>, <span class="string">&#x27;CP4&#x27;</span>: <span class="number">1.30</span>, <span class="string">&#x27;CP6&#x27;</span>: <span class="number">0.94</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="53-对字典的值进行归一化"><a class="markdownIt-Anchor" href="#53-对字典的值进行归一化"></a> 5.3 对字典的值进行归一化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">norMyWeiht = myWeight.<span class="title function_">copy</span>()</span><br><span class="line"># <span class="title class_">Step</span> <span class="number">1</span>: 获取需要归一化的值</span><br><span class="line">values = [v <span class="keyword">for</span> v <span class="keyword">in</span> norMyWeiht.<span class="title function_">values</span>()]</span><br><span class="line"></span><br><span class="line"># <span class="title class_">Step</span> <span class="number">2</span>: 找到最小值和最大值</span><br><span class="line">min_value = <span class="title function_">min</span>(values)</span><br><span class="line">max_value = <span class="title function_">max</span>(values)</span><br><span class="line"></span><br><span class="line"># <span class="title class_">Step</span> <span class="number">3</span>: 对值进行归一化计算</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> norMyWeiht.<span class="title function_">items</span>():</span><br><span class="line">    normalized_value = (value - min_value) / (max_value - min_value)</span><br><span class="line">    norMyWeiht[key] = normalized_value</span><br></pre></td></tr></table></figure><h3 id="54-根据脑地形图导联顺序重构标准化后的矩阵将未被选择的导联值置为0"><a class="markdownIt-Anchor" href="#54-根据脑地形图导联顺序重构标准化后的矩阵将未被选择的导联值置为0"></a> 5.4 根据脑地形图导联顺序重构标准化后的矩阵，将未被选择的导联值置为0</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;脑地形图矩阵导联顺序:&#x27;</span>,chLa_index_64)</span><br><span class="line"># 重构自定义矩阵顺序</span><br><span class="line">reNorMyWeight = []</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> <span class="attr">chLa_index_64</span>:</span><br><span class="line">    <span class="keyword">if</span> key <span class="keyword">in</span> <span class="attr">norMyWeiht</span>:</span><br><span class="line">        val = norMyWeiht[key]</span><br><span class="line">        reNorMyWeight.<span class="title function_">append</span>(val)</span><br><span class="line">    <span class="attr">else</span>:</span><br><span class="line">        reNorMyWeight.<span class="title function_">append</span>(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="55-topomap可视化"><a class="markdownIt-Anchor" href="#55-topomap可视化"></a> 5.5 TopoMap可视化</h3><h4 id="551-创建info"><a class="markdownIt-Anchor" href="#551-创建info"></a> 5.5.1 创建info</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">info = mne.<span class="title function_">create_info</span>(</span><br><span class="line">        ch_names = chLa_index_64.<span class="title function_">tolist</span>(),</span><br><span class="line">        ch_types = [<span class="string">&#x27;eeg&#x27;</span>]*<span class="title function_">len</span>(reNorMyWeight),   # 通道个数</span><br><span class="line">        sfreq = <span class="number">1000</span>)            # 采样频率</span><br><span class="line">info.<span class="title function_">set_montage</span>(biosemi_montage)</span><br></pre></td></tr></table></figure><h4 id="552-可视化"><a class="markdownIt-Anchor" href="#552-可视化"></a> 5.5.2 可视化</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">im, cn = mne.<span class="property">viz</span>.<span class="title function_">plot_topomap</span>(reNorMyWeight, </span><br><span class="line">                              info, </span><br><span class="line">                              names = chLa_index_64,</span><br><span class="line">                              cmap = <span class="string">&#x27;jet&#x27;</span></span><br><span class="line">                              # vlim=(-<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">                             )</span><br><span class="line">plt.<span class="title function_">colorbar</span>(im)</span><br><span class="line">plt.<span class="title function_">title</span>(<span class="string">&#x27;My Montage&#x27;</span>)</span><br><span class="line">plt.<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pCyuO39"><img src="https://s1.ax1x.com/2023/07/05/pCyuO39.png" alt="pCyuO39.png" /></a></p><h2 id="6-代码下载"><a class="markdownIt-Anchor" href="#6-代码下载"></a> 6、代码下载</h2><p><a href="https://github.com/weisihong9/EEG_TopoMap.git">https://github.com/weisihong9/EEG_TopoMap.git</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目的利用mne实现自定义矩阵大脑拓扑图的绘制&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#目的利用mne实现自定义矩阵大脑拓扑图的绘制&quot;&gt;&lt;/a&gt; 目的：利用MNE实现自定义矩阵大脑拓扑图的绘制&lt;/h1&gt;
&lt;h2 id=&quot;0-加载py</summary>
      
    
    
    
    <category term="EEG" scheme="https://weisihong9.github.io/categories/EEG/"/>
    
    <category term="BEAM" scheme="https://weisihong9.github.io/categories/EEG/BEAM/"/>
    
    
    <category term="BEAM" scheme="https://weisihong9.github.io/tags/BEAM/"/>
    
  </entry>
  
  <entry>
    <title>Using_Markdown_writing</title>
    <link href="https://weisihong9.github.io/2023/05/21/Using_Markdown_writing/"/>
    <id>https://weisihong9.github.io/2023/05/21/Using_Markdown_writing/</id>
    <published>2023-05-21T08:54:43.000Z</published>
    <updated>2023-05-21T10:05:27.012Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这是一级标题"><a class="markdownIt-Anchor" href="#这是一级标题"></a> 这是一级标题</h1><p>下面开始说明如何使用markdown进行写作</p><h2 id="这是二级标题"><a class="markdownIt-Anchor" href="#这是二级标题"></a> 这是二级标题</h2><p>这是正文<br />换一行？ （在上一行后面按两次空格，再回车就是换一行）</p><p>换一段（按两次换行就是换一段）</p><h3 id="1-强调"><a class="markdownIt-Anchor" href="#1-强调"></a> 1 强调</h3><p><strong>加粗了: 前后各加两个*号</strong><br /><em>斜体：前后各加一个星号</em></p><h3 id="2-列表"><a class="markdownIt-Anchor" href="#2-列表"></a> 2 列表</h3><ol><li>自动编号：数字 + 点 + 空格即可</li><li>来一个二级标题<ol><li>按一下回车，再tab就行</li></ol></li><li>再来一个三级标题<ol><li>按回车，再按tab<ol><li>继续回车，再tab</li></ol></li></ol></li></ol><h3 id="3-插入图片图床上传图片"><a class="markdownIt-Anchor" href="#3-插入图片图床上传图片"></a> 3 插入图片：图床上传图片</h3><p>把图片先上传到<a href="https://imgse.com/cathyimage_">自己的图床</a>，然后复制生成的图片链接。<br />格式为：!+[图片名字]+(http:\……png)<br /><img src="https://s1.ax1x.com/2023/05/21/p9Ip0b9.png" alt="p9Ip0b9" /><br /><em>图片注释</em></p><p>或者：<br /><a href="https://imgse.com/i/p9Ipb28"><img src="https://s1.ax1x.com/2023/05/21/p9Ipb28.png" alt="p9Ipb28.png" /></a></p><h3 id="4-数学公式"><a class="markdownIt-Anchor" href="#4-数学公式"></a> 4 数学公式</h3><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mi>x</mi></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lim_{x \to \infin}\frac{sin(x)}{x}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.127em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>在一段文字中插入公式: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\lim_{x \to \infin}f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>, command + m 快捷键连按两次就可以生成4个美元符号然后输入公式</p><h3 id="5-表格"><a class="markdownIt-Anchor" href="#5-表格"></a> 5 表格</h3><table><thead><tr><th style="text-align:left">EMD</th><th style="text-align:center">HHT</th><th style="text-align:right">HHSA</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:center">2</td><td style="text-align:right">3</td></tr><tr><td style="text-align:left">左对其</td><td style="text-align:center">居中对齐</td><td style="text-align:right">右对齐</td></tr></tbody></table><p>调整编辑部分表格格式快捷键：<br />先选中表格内容，然后：Alt（fn+option） + shift + f</p><h3 id="6-插入链接"><a class="markdownIt-Anchor" href="#6-插入链接"></a> 6 插入链接</h3><p>复制网址，然后选中要给超链接的文字，直接：command + v 就行<br />这是一个laTex的<a href="https://www.latexlive.com/home">链接</a></p><h3 id="7-code"><a class="markdownIt-Anchor" href="#7-code"></a> 7 code</h3><p>英文的三个小点：1左边的那个键</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> <span class="title class_">PyEMD</span> <span class="keyword">import</span> <span class="variable constant_">EMD</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.<span class="property">pyplot</span> <span class="keyword">as</span> plt </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="8-导航"><a class="markdownIt-Anchor" href="#8-导航"></a> 8 导航</h3><p><a href="https://imgse.com/i/p9IpOKg"><img src="https://s1.ax1x.com/2023/05/21/p9IpOKg.png" alt="p9IpOKg.png" /></a></p><h3 id="9-将md文件导出为pdf"><a class="markdownIt-Anchor" href="#9-将md文件导出为pdf"></a> 9 将md文件导出为pdf</h3><ol><li>首先下载这个插件：Markdown Preview Enhanced</li><li>然后 command + shift + v 打开 Preview **.md 界面</li><li>最后在 Preview **.md 界面，右键，然后选中：Chrome(Puppeteer) --&gt; PDF  即可</li></ol><h3 id="10-这是该md文件的下载链接"><a class="markdownIt-Anchor" href="#10-这是该md文件的下载链接"></a> 10 这是该md文件的<a href="https://github.com/weisihong9/Markdown-Writing.git">下载链接</a>！</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这是一级标题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#这是一级标题&quot;&gt;&lt;/a&gt; 这是一级标题&lt;/h1&gt;
&lt;p&gt;下面开始说明如何使用markdown进行写作&lt;/p&gt;
&lt;h2 id=&quot;这是二级标题&quot;&gt;&lt;a class=&quot;markdow</summary>
      
    
    
    
    
    <category term="Markdown" scheme="https://weisihong9.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>EMD</title>
    <link href="https://weisihong9.github.io/2023/05/21/EMD/"/>
    <id>https://weisihong9.github.io/2023/05/21/EMD/</id>
    <published>2023-05-20T16:58:43.000Z</published>
    <updated>2023-05-21T15:59:47.986Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的利用python自带的-pyemd-实现-经验模态分解emd"><a class="markdownIt-Anchor" href="#目的利用python自带的-pyemd-实现-经验模态分解emd"></a> 目的：利用python自带的 pyEMD 实现 经验模态分解（EMD）</h2><h3 id="1-加载python库"><a class="markdownIt-Anchor" href="#1-加载python库"></a> 1 加载python库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">from PyEMD import EMD</span><br><span class="line">import matplotlib.pyplot as plt</span><br></pre></td></tr></table></figure><h3 id="2-emd分解"><a class="markdownIt-Anchor" href="#2-emd分解"></a> 2 EMD分解</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成示例信号</span></span><br><span class="line">t = np.linspace(0, 1, 1000)</span><br><span class="line">signal = np.sin(5 * 2 * np.pi * t) + np.sin(10 * 2 * np.pi * t)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建EMD对象</span></span><br><span class="line">emd = EMD()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行EMD分解</span></span><br><span class="line">IMFs = emd(signal)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制分解后的IMFs</span></span><br><span class="line">plt.figure(figsize=(10, 6),dpi=600)</span><br><span class="line">plt.subplot(len(IMFs) + 1, 1, 1)</span><br><span class="line">plt.plot(t, signal, <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Original Signal&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, IMF <span class="keyword">in</span> enumerate(IMFs):</span><br><span class="line">    plt.subplot(len(IMFs) + 1, 1, i + 2)</span><br><span class="line">    plt.plot(t, IMF, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    plt.title(<span class="string">&#x27;IMF %d&#x27;</span> % (i + 1))</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="3-结束"><a class="markdownIt-Anchor" href="#3-结束"></a> 3 结束</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;目的利用python自带的-pyemd-实现-经验模态分解emd&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#目的利用python自带的-pyemd-实现-经验模态分解emd&quot;&gt;&lt;/a&gt; 目的：利用python自带的 pyEMD 实现</summary>
      
    
    
    
    <category term="Signal processing" scheme="https://weisihong9.github.io/categories/Signal-processing/"/>
    
    <category term="EMD" scheme="https://weisihong9.github.io/categories/Signal-processing/EMD/"/>
    
    
    <category term="EMD" scheme="https://weisihong9.github.io/tags/EMD/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://weisihong9.github.io/2023/05/20/hello-world/"/>
    <id>https://weisihong9.github.io/2023/05/20/hello-world/</id>
    <published>2023-05-20T10:35:24.631Z</published>
    <updated>2023-05-20T10:35:24.632Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
